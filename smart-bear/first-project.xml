<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d1dde945-54ba-4777-a37e-64d5582815ec" created="3.45.0" activeEnvironment="Default environment" name="Project 1" projectVersion="" updated="3.45.0 2023-04-03T14:41:27Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="4196062d-6e09-474c-9c81-3e45dbbd837b" name="Swagger Petstore YAML" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="C:\projekty\apps\smart-bear\swagger.yaml" basePath="/v2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>This is a sample server Petstore server.  You can find out more about Swagger at &lt;a href="http://swagger.io">http://swagger.io&lt;/a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key "special-key" to test the authorization filters</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/C:/projekty/apps/smart-bear/swagger.yaml">
      <con:part>
        <con:url>file:/C:/projekty/apps/smart-bear/swagger.yaml</con:url>
        <con:content>swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about Swagger at &lt;a href=\"http://swagger.io\">http://swagger.io&lt;/a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \"special-key\" to test the authorization filters"
  version: 1.0.0
  title: Swagger Petstore YAML
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: /v2
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: "http://swagger.io"
  - name: store
    description: Operations about user
  - name: user
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: "http://swagger.io"
schemes:
  - http
paths:
  /pet:
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      x-swagger-router-controller: SampleController
      description: ""
      operationId: addPet
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Pet"
      responses:
        "405":
          description: Invalid input
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: ""
      operationId: updatePet
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Pet"
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "405":
          description: Validation exception
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
  /pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      consumes:
        - application/xml
        - application/json
        - multipart/form-data
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          default: available
          enum:
            - available
            - pending
            - sold
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Pet"
        "400":
          description: Invalid status value
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
  /pet/findByTags:
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
      operationId: findPetsByTags
      produces:
        - application/xml
        - application/json
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Pet"
        "400":
          description: Invalid tag value
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
  "/pet/{petId}":
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      description: ""
      operationId: updatePetWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          type: string
        - name: name
          in: formData
          description: Updated name of the pet
          required: false
          type: string
        - name: status
          in: formData
          description: Updated status of the pet
          required: false
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ""
      operationId: deletePet
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          description: ""
          required: false
          type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid pet value
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
  "/pet/{petId}/uploadImage":
    post:
      tags:
        - pet
      summary: uploads an image
      x-swagger-router-controller: SampleController
      description: ""
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
  /store/inventory:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      produces:
        - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
      security:
        - api_key: []
  /store/order:
    post:
      tags:
        - store
      summary: Place an order for a pet
      description: ""
      operationId: placeOrder
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed for purchasing the pet
          required: false
          schema:
            $ref: "#/definitions/Order"
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: Invalid Order
  "/store/order/{orderId}":
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: "For valid response try integer IDs with value &lt;= 5 or > 10. Other values will generated exceptions"
      operationId: getOrderById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrder
      produces:
        - application/xml
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: successful operation
  /user/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ""
      operationId: createUsersWithArrayInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: false
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        default:
          description: successful operation
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ""
      operationId: createUsersWithListInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: false
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when toekn expires
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  "/user/{username}":
    get:
      tags:
        - user
      summary: Get user by user name
      description: ""
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: "http://petstore.swagger.io/api/oauth/dialog"
    flow: implicit
    scopes:
      "write:pets": modify pets in your account
      "read:pets": read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Order:
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
    xml:
      name: Order
  Category:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: "#/definitions/Category"
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  ApiResponse:
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
    xml:
      name: "##default"
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"</con:content>
        <con:type>https://swagger.io/swagger2/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints/>
    <con:resource name="/pet" path="/pet" id="242a5a81-9577-437f-beea-39ae806645df">
      <con:settings/>
      <con:parameters/>
      <con:method name="addPet" id="6c7675e7-95af-4bf2-83ac-96d76f857610" method="POST">
        <con:description>Add a new pet to the store</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "category" : {
    "id" : 0,
    "name" : "string"
  },
  "name" : "doggie",
  "photoUrls" : [ "string" ],
  "tags" : [ {
    "id" : 0,
    "name" : "string"
  } ],
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
          <con:sampleContent><![CDATA[<Pet>
   <id>0</id>
   <Category>
      <id>0</id>
      <name>string</name>
   </Category>
   <name>doggie</name>
   <photoUrl>
      <photoUrls>string</photoUrls>
   </photoUrl>
   <tag>
      <Tag>
         <id>0</id>
         <name>string</name>
      </Tag>
   </tag>
   <status>available</status>
</Pet>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="1e21bb47-05f8-46cc-8ca2-16b1e878165d" mediaType="application/json">
          <con:settings/>
          <con:request>{\r
  "id" : 0,\r
  "category" : {\r
    "id" : 0,\r
    "name" : "string"\r
  },\r
  "name" : "doggie",\r
  "photoUrls" : [ "string" ],\r
  "tags" : [ {\r
    "id" : 0,\r
    "name" : "string"\r
  } ],\r
  "status" : "available"\r
}</con:request>
          <con:parameters/>
        </con:request>
        <con:request name="Request 2" id="b96f6604-19de-4f1d-b7ab-17263cf7b2b4" mediaType="application/xml">
          <con:settings/>
          <con:request><![CDATA[<Pet>\r
   <id>0</id>\r
   <Category>\r
      <id>0</id>\r
      <name>string</name>\r
   </Category>\r
   <name>doggie</name>\r
   <photoUrl>\r
      <photoUrls>string</photoUrls>\r
   </photoUrl>\r
   <tag>\r
      <Tag>\r
         <id>0</id>\r
         <name>string</name>\r
      </Tag>\r
   </tag>\r
   <status>available</status>\r
</Pet>]]></con:request>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="updatePet" id="19d9f657-0f80-40bc-8ba0-976846e52ba5" method="PUT">
        <con:description>Update an existing pet</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "category" : {
    "id" : 0,
    "name" : "string"
  },
  "name" : "doggie",
  "photoUrls" : [ "string" ],
  "tags" : [ {
    "id" : 0,
    "name" : "string"
  } ],
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
          <con:sampleContent><![CDATA[<Pet>
   <id>0</id>
   <Category>
      <id>0</id>
      <name>string</name>
   </Category>
   <name>doggie</name>
   <photoUrl>
      <photoUrls>string</photoUrls>
   </photoUrl>
   <tag>
      <Tag>
         <id>0</id>
         <name>string</name>
      </Tag>
   </tag>
   <status>available</status>
</Pet>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="210d3c08-f17c-4336-b4b8-568841befacb" mediaType="application/json">
          <con:settings/>
          <con:request>{\r
  "id" : 0,\r
  "category" : {\r
    "id" : 0,\r
    "name" : "string"\r
  },\r
  "name" : "doggie",\r
  "photoUrls" : [ "string" ],\r
  "tags" : [ {\r
    "id" : 0,\r
    "name" : "string"\r
  } ],\r
  "status" : "available"\r
}</con:request>
          <con:parameters/>
        </con:request>
        <con:request name="Request 2" id="2ee0d619-0d40-4d09-8427-962e6705695f" mediaType="application/xml">
          <con:settings/>
          <con:request><![CDATA[<Pet>\r
   <id>0</id>\r
   <Category>\r
      <id>0</id>\r
      <name>string</name>\r
   </Category>\r
   <name>doggie</name>\r
   <photoUrl>\r
      <photoUrls>string</photoUrls>\r
   </photoUrl>\r
   <tag>\r
      <Tag>\r
         <id>0</id>\r
         <name>string</name>\r
      </Tag>\r
   </tag>\r
   <status>available</status>\r
</Pet>]]></con:request>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/pet/findByStatus" path="/pet/findByStatus" id="e42ec7cc-7fdd-4c66-896a-5b32e690a6b5">
      <con:settings/>
      <con:parameters/>
      <con:method name="findPetsByStatus" id="f021b0db-51bd-4f9f-a3c5-c867ea5fa6c0" method="GET">
        <con:description>Multiple status values can be provided with comma separated strings
Finds Pets by status</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>status</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>array</con:dataType>
            <con:description>Status values that need to be considered for filter</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<Pet>
   <id>0</id>
   <Category>
      <id>0</id>
      <name>string</name>
   </Category>
   <name>doggie</name>
   <photoUrl>
      <photoUrls>string</photoUrls>
   </photoUrl>
   <tag>
      <Tag>
         <id>0</id>
         <name>string</name>
      </Tag>
   </tag>
   <status>available</status>
</Pet>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>[ {
  "id" : 0,
  "category" : {
    "id" : 0,
    "name" : "string"
  },
  "name" : "doggie",
  "photoUrls" : [ "string" ],
  "tags" : [ {
    "id" : 0,
    "name" : "string"
  } ],
  "status" : "available"
} ]</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="e1e7ec82-55ad-4feb-a1f9-5200c4724a38" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/pet/findByTags" path="/pet/findByTags" id="8dd6ddd7-f719-472d-be00-56a7b06d7294">
      <con:settings/>
      <con:parameters/>
      <con:method name="findPetsByTags" id="d9a3554d-cc79-47a8-a8d9-5b12053be2af" method="GET">
        <con:description>Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
Finds Pets by tags</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>tags</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>array</con:dataType>
            <con:description>Tags to filter by</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<Pet>
   <id>0</id>
   <Category>
      <id>0</id>
      <name>string</name>
   </Category>
   <name>doggie</name>
   <photoUrl>
      <photoUrls>string</photoUrls>
   </photoUrl>
   <tag>
      <Tag>
         <id>0</id>
         <name>string</name>
      </Tag>
   </tag>
   <status>available</status>
</Pet>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>[ {
  "id" : 0,
  "category" : {
    "id" : 0,
    "name" : "string"
  },
  "name" : "doggie",
  "photoUrls" : [ "string" ],
  "tags" : [ {
    "id" : 0,
    "name" : "string"
  } ],
  "status" : "available"
} ]</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="d006e5a3-8b5f-4641-b792-296e3ca3e1fe" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/pet/{petId}" path="/pet/{petId}" id="3ca85fb0-6943-4437-bb05-ff9cdcf3f54a">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>petId</con:name>
          <con:style>TEMPLATE</con:style>
          <con:dataType>integer</con:dataType>
          <con:description>Pet id to delete</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="getPetById" id="a2b97a37-f683-4706-b813-9fd6a2f74564" method="GET">
        <con:description>Returns a single pet
Find pet by ID</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<Pet>
   <id>0</id>
   <Category>
      <id>0</id>
      <name>string</name>
   </Category>
   <name>doggie</name>
   <photoUrl>
      <photoUrls>string</photoUrls>
   </photoUrl>
   <tag>
      <Tag>
         <id>0</id>
         <name>string</name>
      </Tag>
   </tag>
   <status>available</status>
</Pet>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "category" : {
    "id" : 0,
    "name" : "string"
  },
  "name" : "doggie",
  "photoUrls" : [ "string" ],
  "tags" : [ {
    "id" : 0,
    "name" : "string"
  } ],
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="df7d15a5-4f70-4aa9-95b5-b2f593722f88" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="updatePetWithForm" id="14d043d5-46fb-4118-b3e7-bc69351bfca1" method="POST">
        <con:description>Updates a pet in the store with form data</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Updated name of the pet</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>status</con:name>
            <con:style>QUERY</con:style>
            <con:description>Updated status of the pet</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="28c7e0ae-83a2-44b0-b55a-0424fedcba7a" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="deletePet" id="e6167f4c-80aa-4740-b5c5-7cd9ea6a71db" method="DELETE">
        <con:description>Deletes a pet</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>api_key</con:name>
            <con:style>HEADER</con:style>
            <con:description/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="f27f2f26-c8e6-442d-8277-b1681b2fa055" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/pet/{petId}/uploadImage" path="/pet/{petId}/uploadImage" id="0ca660df-88fa-4f37-8594-9dcb02c915d3">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>petId</con:name>
          <con:style>TEMPLATE</con:style>
          <con:dataType>integer</con:dataType>
          <con:description>ID of pet to update</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="uploadFile" id="2e7def0b-3679-47cb-932f-b644f388b5a6" method="POST">
        <con:description>uploads an image</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>additionalMetadata</con:name>
            <con:style>QUERY</con:style>
            <con:description>Additional data to pass to server</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>file</con:name>
            <con:style>QUERY</con:style>
            <con:description>file to upload</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "code" : 0,
  "type" : "string",
  "message" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="8857ffac-4094-4516-a324-5ad30ba2fe11" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/store/inventory" path="/store/inventory" id="c9eb33c1-6f74-491f-9cb2-b6fb21738b50">
      <con:settings/>
      <con:parameters/>
      <con:method name="getInventory" id="1f1cd934-c8a8-461d-8570-28304fd7f0e8" method="GET">
        <con:description>Returns a map of status codes to quantities
Returns pet inventories by status</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "additionalProp1" : 0,
  "additionalProp2" : 0,
  "additionalProp3" : 0
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="3bfec18d-e88f-4b7c-9c30-a6e4e6deddc8" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/store/order" path="/store/order" id="1873c58c-18f9-419d-9d80-d7f5b2787a4c">
      <con:settings/>
      <con:parameters/>
      <con:method name="placeOrder" id="1109e426-dca0-403e-8d8c-d6c1ca9124f1" method="POST">
        <con:description>Place an order for a pet</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<Order>
   <id>0</id>
   <petId>0</petId>
   <quantity>0</quantity>
   <shipDate>2015-07-20T15:49:04-07:00</shipDate>
   <status>placed</status>
   <complete>true</complete>
</Order>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "petId" : 0,
  "quantity" : 0,
  "shipDate" : "2015-07-20T15:49:04-07:00",
  "status" : "placed",
  "complete" : true
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="a1478633-7d60-47d6-8482-196f2efabd8d" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/store/order/{orderId}" path="/store/order/{orderId}" id="a3802088-5fed-4f39-a411-7f8809ec12a7">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>orderId</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>ID of the order that needs to be deleted</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="getOrderById" id="77b2d7f3-18ae-4e32-8fa1-41fd3f582d0d" method="GET">
        <con:description>For valid response try integer IDs with value &lt;= 5 or > 10. Other values will generated exceptions
Find purchase order by ID</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<Order>
   <id>0</id>
   <petId>0</petId>
   <quantity>0</quantity>
   <shipDate>2015-07-20T15:49:04-07:00</shipDate>
   <status>placed</status>
   <complete>true</complete>
</Order>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "petId" : 0,
  "quantity" : 0,
  "shipDate" : "2015-07-20T15:49:04-07:00",
  "status" : "placed",
  "complete" : true
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="807c2d52-8f8c-4bdc-acab-23928b39e6fe" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="deleteOrder" id="a99ccba7-6147-4727-ba43-5b41cf705ae0" method="DELETE">
        <con:description>For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
Delete purchase order by ID</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="2419ae2d-d5c9-4fa8-a26e-32ee5274b84b" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user" path="/user" id="7fef8528-9f5d-4fce-a544-27ef164d88e1">
      <con:settings/>
      <con:parameters/>
      <con:method name="createUser" id="5a3e6f88-3766-4f9e-a66b-76313255116f" method="POST">
        <con:description>This can only be done by the logged in user.
Create user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="6542444e-72b3-40a1-9d35-e66cc12d1c6f" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/createWithArray" path="/user/createWithArray" id="8add0eda-0ed9-4736-9306-0a752b9b19e5">
      <con:settings/>
      <con:parameters/>
      <con:method name="createUsersWithArrayInput" id="1764a118-f05b-4094-a6fd-4af8ca1290fc" method="POST">
        <con:description>Creates list of users with given input array</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="261f0019-a940-49ea-a926-bc927b37bbf4" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/createWithList" path="/user/createWithList" id="d59ea799-4745-458d-a2d6-861d5a698b43">
      <con:settings/>
      <con:parameters/>
      <con:method name="createUsersWithListInput" id="2163acd9-812e-4958-be4d-c0234d61efbf" method="POST">
        <con:description>Creates list of users with given input array</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="1d60077e-6860-4ffd-8d21-578e18ea5d2c" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/login" path="/user/login" id="25c65ee5-b117-46ea-b0b9-5f4a7a39d629">
      <con:settings/>
      <con:parameters/>
      <con:method name="loginUser" id="aa3087dc-b35d-4153-a461-d83ba827ca54" method="GET">
        <con:description>Logs user into the system</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>username</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user name for login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>password</con:name>
            <con:style>QUERY</con:style>
            <con:description>The password for login in clear text</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>&lt;string>string&lt;/string></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>"string"</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="95a2dfd4-3978-49c1-b8da-d63f9ab2d3e3" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/logout" path="/user/logout" id="abc69629-06b7-4c86-a752-85c88ac3bc8c">
      <con:settings/>
      <con:parameters/>
      <con:method name="logoutUser" id="9b45b594-466d-4700-8a2c-73bcb8eeda44" method="GET">
        <con:description>Logs out current logged in user session</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b0406e02-cf6e-475d-9f5e-68e8b35a21f3" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/{username}" path="/user/{username}" id="ae7e054f-db47-48f8-a72e-a9b598643e04">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>username</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The name that needs to be deleted</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="getUserByName" id="5debd0ff-c08f-4ef1-b9c9-b153fa88036a" method="GET">
        <con:description>Get user by user name</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<User>
   <id>0</id>
   <username>string</username>
   <firstName>string</firstName>
   <lastName>string</lastName>
   <email>string</email>
   <password>string</password>
   <phone>string</phone>
   <userStatus>0</userStatus>
</User>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "username" : "string",
  "firstName" : "string",
  "lastName" : "string",
  "email" : "string",
  "password" : "string",
  "phone" : "string",
  "userStatus" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="fd9b5d87-5dff-4389-a6d8-0ae7889b8792" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="updateUser" id="93dc811d-9c69-4c15-8ea5-77fd70318f4b" method="PUT">
        <con:description>This can only be done by the logged in user.
Updated user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="1963ccf3-eb95-4e5a-85a8-3454ae9c97fd" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="deleteUser" id="d47011c7-36a1-475d-9272-2ab05370cc90" method="DELETE">
        <con:description>This can only be done by the logged in user.
Delete user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="77181861-b2d6-4c0a-a1cb-4d9f5e093b27" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="d8f9c35c-ee8f-4e8f-bddc-865962f4a5cc" name="Project 1 Test Suite 1">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="18749324-cad9-482f-ad6a-72b1b89817af" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="d374fa2d-b3a5-440e-98c6-29a187e2a092">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet" methodName="addPet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="1e21bb47-05f8-46cc-8ca2-16b1e878165d" mediaType="application/json">
            <con:settings/>
            <con:request>{\r
  "id" : 0,\r
  "category" : {\r
    "id" : 0,\r
    "name" : "string"\r
  },\r
  "name" : "doggie",\r
  "photoUrls" : [ "string" ],\r
  "tags" : [ {\r
    "id" : 0,\r
    "name" : "string"\r
  } ],\r
  "status" : "available"\r
}</con:request>
            <con:assertion type="Valid HTTP Status Codes" id="8a932d31-adc3-4f97-88f8-0c97b82755dd" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="4aa5f0ec-b8d6-447e-aaa0-5df29e9b3fdb" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="3fb644cd-6735-44a8-bfa7-aac5fcd4b190" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="d9b55138-e1a5-4b06-bdb3-dee1ff197e03" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet-Request 2 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="fe5d1a70-d47e-4b96-82db-3a66f0bb088d">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet" methodName="addPet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="b96f6604-19de-4f1d-b7ab-17263cf7b2b4" mediaType="application/xml">
            <con:settings/>
            <con:request><![CDATA[<Pet>\r
   <id>0</id>\r
   <Category>\r
      <id>0</id>\r
      <name>string</name>\r
   </Category>\r
   <name>doggie</name>\r
   <photoUrl>\r
      <photoUrls>string</photoUrls>\r
   </photoUrl>\r
   <tag>\r
      <Tag>\r
         <id>0</id>\r
         <name>string</name>\r
      </Tag>\r
   </tag>\r
   <status>available</status>\r
</Pet>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="a4b3a392-6f67-4dee-aafb-91be7f90908d" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="48bff533-ab14-42d0-8afa-e3992753ff1f" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="7a04bffa-53f7-4045-9554-efaad44d0c58" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="03f9092a-7946-4b0f-a495-03474aafe423" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="PUT Request" id="b9e3ffe5-cf6b-4cc5-8046-1a9f962188c2">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet" methodName="updatePet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PUT Request" id="210d3c08-f17c-4336-b4b8-568841befacb" mediaType="application/json">
            <con:settings/>
            <con:request>{\r
  "id" : 0,\r
  "category" : {\r
    "id" : 0,\r
    "name" : "string"\r
  },\r
  "name" : "doggie",\r
  "photoUrls" : [ "string" ],\r
  "tags" : [ {\r
    "id" : 0,\r
    "name" : "string"\r
  } ],\r
  "status" : "available"\r
}</con:request>
            <con:assertion type="Valid HTTP Status Codes" id="2568f357-2874-4452-bfe3-4a4909d7adfd" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="0e3c04ba-d4ef-4209-ab53-7d375439c765" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="cc803a32-68ca-40c0-894a-b7cb7edbaf7e" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="e64839be-39e0-471c-afaa-e7fa79a90c9f" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet-Request 2 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="PUT Request" id="b25f3c64-df00-40fb-a173-811ddc49906d">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet" methodName="updatePet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PUT Request" id="2ee0d619-0d40-4d09-8427-962e6705695f" mediaType="application/xml">
            <con:settings/>
            <con:request><![CDATA[<Pet>\r
   <id>0</id>\r
   <Category>\r
      <id>0</id>\r
      <name>string</name>\r
   </Category>\r
   <name>doggie</name>\r
   <photoUrl>\r
      <photoUrls>string</photoUrls>\r
   </photoUrl>\r
   <tag>\r
      <Tag>\r
         <id>0</id>\r
         <name>string</name>\r
      </Tag>\r
   </tag>\r
   <status>available</status>\r
</Pet>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="2f7116b9-9c82-4805-8bac-019500a6542e" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="d49fe678-c682-48e5-a4d8-dded591ef979" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="a3a8334f-79e4-4d18-b857-0c9fae06d79d" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="266a01f4-5f3e-44ad-932a-de5bc551cad3" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet/findByStatus-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="5a086a75-1071-4252-bde5-2081ec6fc180">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet/findByStatus" methodName="findPetsByStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="e1e7ec82-55ad-4feb-a1f9-5200c4724a38" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="27738581-de36-4d09-9a8f-1447566da1f2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="2218accb-facc-4c01-b460-0f0a40323d5a" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="cc42b1c3-5804-4960-912b-d915fd3c44ed" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="242722e2-5a47-4812-b237-18fa760b9ac9" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet/findByTags-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="71368ff4-2068-429d-aeab-131df5374ee9">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet/findByTags" methodName="findPetsByTags" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="d006e5a3-8b5f-4641-b792-296e3ca3e1fe" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="02d14516-e911-4452-8794-eb5efbfe4966" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="b294a7d5-89f5-443b-80ae-e7d1d29bc8fc" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="441213c3-562c-4f35-9c57-46b1a3f7e9c8" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="12f8d8ef-3b75-4b62-b0cd-6a8821fd6b42" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet/{petId}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="919e379b-8c92-44e1-b5cf-0310c4956d27">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet/{petId}" methodName="getPetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="df7d15a5-4f70-4aa9-95b5-b2f593722f88" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="53be8748-5c44-41af-b927-a22dfdbd1e35" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="abf9ed61-199d-4975-b158-836ecff8923b" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="19f9b8b3-6d6f-46bf-ad40-46885e960811" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="231b29bd-3e5b-4dcf-b768-1aa3f65a6c9d" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet/{petId}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="238310bc-1262-47bf-802c-01e7a3f68470">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet/{petId}" methodName="updatePetWithForm" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="28c7e0ae-83a2-44b0-b55a-0424fedcba7a" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="e92351d6-d151-4ec8-b98b-8faec6a1f326" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="81b750d0-7a33-4b22-ac94-51366e0ef885" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="dec7301a-d207-4c97-9386-1b29ea9d1f58" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="f2c75ede-1b08-4c6a-b822-28e2f6619ada" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet/{petId}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="DELETE Request" id="93956c2b-5553-4949-8aae-54a18dec4c55">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet/{petId}" methodName="deletePet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DELETE Request" id="f27f2f26-c8e6-442d-8277-b1681b2fa055" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="7ea88d6d-7fea-4253-99b3-36fa88968035" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="e0f6e8f2-6c2a-4fae-94a7-77fb5dfd1135" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="6abeb680-3d02-4e5d-b9a0-5e18922df419" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="5de5df4e-3b7d-486b-ac48-9466f905bdc1" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/pet/{petId}/uploadImage-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="4d547a89-8263-4d7b-86f6-3475ed25770a">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/pet/{petId}/uploadImage" methodName="uploadFile" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="8857ffac-4094-4516-a324-5ad30ba2fe11" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="4b54d7e1-4a66-417f-9924-0ff7b96567a6" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="1b439a52-34c6-4d60-b764-a9844cf796f2" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="676ed6d7-354f-4642-adde-d060adcda531" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3c3090f2-77c4-482b-b872-3b7a8d45fc9a" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/store/inventory-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="10719495-11a7-4e93-a496-3b11eb8f527c">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/store/inventory" methodName="getInventory" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="3bfec18d-e88f-4b7c-9c30-a6e4e6deddc8" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="22559adf-9a89-46b7-8dfc-679cba91ef11" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="27e05f2c-41e7-4f34-ae5e-9bd0e4774d6b" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="bbb5d9e8-043d-48ed-833b-605933b9cf9b" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ccfb7c82-5a25-49d0-b87c-a2cf4e5c8535" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/store/order-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="6104b472-3025-4a17-81ac-7146fbf808b6">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/store/order" methodName="placeOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="a1478633-7d60-47d6-8482-196f2efabd8d" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="aec3bbfe-2e7c-4320-b12d-730c39d328b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="e4cdf9b5-3e2c-4591-85fe-bdf58cab026c" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="25505e1f-339e-4382-aff5-fa8b51f5959e" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3db10bee-a844-4293-a2b9-69f8b3628087" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/store/order/{orderId}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="1c83781e-4bfe-47c2-b667-61550cbf7a31">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/store/order/{orderId}" methodName="getOrderById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="807c2d52-8f8c-4bdc-acab-23928b39e6fe" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="03773dfc-4a26-49c8-af7c-1b0933f9e88e" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="1e49f0ff-3394-4e94-b682-6d6d782eca1d" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="520d2af9-4936-4492-9a38-5529ffabfd28" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="910ab2d7-b69c-487d-bbaa-35851fc0858b" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/store/order/{orderId}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="DELETE Request" id="662d1aa1-ba36-4fb7-b84a-b8c6fcf92a1d">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/store/order/{orderId}" methodName="deleteOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DELETE Request" id="2419ae2d-d5c9-4fa8-a26e-32ee5274b84b" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="e27372ee-c34a-425a-9b07-6316ee851bd6" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="e9bd1b95-9882-455a-800d-074cead88aa6" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="c0b2a0b3-d83b-49b5-8bc0-d978240c9242" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="cc5099bd-9728-4dc4-b203-10c21ae4a28e" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="ebfa6c8f-f383-4ec0-8328-35c704da541e">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user" methodName="createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="6542444e-72b3-40a1-9d35-e66cc12d1c6f" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="ca0679eb-8cfe-4141-a61b-5814dc8a6762" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="52acf759-3f93-4432-bbf3-ee735ea62acf" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="d853b45b-ceac-4bc4-9f74-a1f806d1614b" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8de2fe46-d06a-41cb-83f8-8a7c7d50d667" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/createWithArray-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="8405b32e-4318-42ac-9454-c42e7d17a39a">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/createWithArray" methodName="createUsersWithArrayInput" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="261f0019-a940-49ea-a926-bc927b37bbf4" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="eca7a1a9-bbae-4327-ad55-43f972acabb8" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="f89f4b91-a2e5-4670-9dea-77685c009345" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="be2398b1-7a77-4a76-b1d5-a8e155780a7f" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="7337512d-fd39-4bef-a83b-b81958b6493b" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/createWithList-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="POST Request" id="c3fcb8c6-a3a9-4a74-a39b-365078e51189">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/createWithList" methodName="createUsersWithListInput" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST Request" id="1d60077e-6860-4ffd-8d21-578e18ea5d2c" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="a16cd355-7421-4245-aef4-d333e30037c7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="61404412-b2bd-4ffa-b48b-e258bb6ff02b" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="d406773b-6b06-484b-8eaa-f25855074542" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="efa37359-b10e-4944-8823-58ee962cacab" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/login-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="9189b654-e48a-44e3-bf8a-3c7aaf3e9e65">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/login" methodName="loginUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="95a2dfd4-3978-49c1-b8da-d63f9ab2d3e3" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="83154df7-2118-4cee-9163-90f374fd2029" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="b85b0f98-4bab-40c4-a191-eb51b87d7b37" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="5c2b1b6e-3d4a-4b17-b313-a6efcfe6f6f4" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="58bf81f5-e16a-4510-890e-a9bb0e0365db" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/logout-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="192e0bf7-361a-434c-9f34-85639041d865">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/logout" methodName="logoutUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="b0406e02-cf6e-475d-9f5e-68e8b35a21f3" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="d3822afb-fd2f-4cf3-ba7c-8344f093fd9d" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="d5777158-39b5-4cef-b744-90a0612628d2" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4c3636f5-3133-4f3a-b5fb-dd94abf5acff" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="258e3be3-7e78-4f4f-8724-8601588eebee" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/{username}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="GET Request" id="6ee6a61a-6e88-4197-a230-f32d72c978a9">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/{username}" methodName="getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET Request" id="fd9b5d87-5dff-4389-a6d8-0ae7889b8792" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="b12858d0-c0de-4937-8c9f-01ec32336ba0" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="aec23356-58b7-4f21-9fb5-e51217047369" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="7d5289af-09c1-4604-ac76-2ad037c0de3b" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="fd8464f8-fe28-4502-9907-b30a975e3d33" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/{username}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="PUT Request" id="971bacec-5e86-40b5-8d24-614bea9564ff">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/{username}" methodName="updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PUT Request" id="1963ccf3-eb95-4e5a-85a8-3454ae9c97fd" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="3853b658-a88d-46a3-a9a5-0c8c15fae6d7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="f71f6fd4-50d3-42a5-ab68-7abcd0b9cba8" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="5d9c106b-127b-4ce5-8052-0a7a3fb10d64" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="c61cef01-c2b5-4d3b-bf6e-1a4485c42e05" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="/user/{username}-Request 1 Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="DELETE Request" id="51d78631-21e2-46f8-9ca0-e6803d23f2ce">
        <con:settings/>
        <con:config service="Swagger Petstore YAML" resourcePath="/v2/user/{username}" methodName="deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DELETE Request" id="77181861-b2d6-4c0a-a1cb-4d9f5e093b27" mediaType="application/json">
            <con:settings/>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="33061c80-6ab3-4a66-8c05-d56670c04873" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="27871f7b-9b08-4ec9-ac6f-b3c3379a0a45" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>file:/C:/projekty/apps/smart-bear/swagger.yaml</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="db8c5788-45f1-4192-9ca4-fad9c47025ba" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
